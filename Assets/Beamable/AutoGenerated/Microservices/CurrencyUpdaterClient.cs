//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.CurrencyUpdater.CurrencyUpdater"/> </summary
    public sealed class CurrencyUpdaterClient : MicroserviceClient, Beamable.Common.IHaveServiceName
    {
        
        public CurrencyUpdaterClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public CurrencyUpdaterClient(Beamable.Common.Dependencies.IDependencyProvider provider) : 
                base(provider)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "CurrencyUpdater";
            }
        }
        
        /// <summary>
        /// Call the UpdateCurrency method on the CurrencyUpdater microservice
        /// <see cref="Beamable.CurrencyUpdater.CurrencyUpdater.UpdateCurrency"/>
        /// </summary>
        public Beamable.Common.Promise<long> UpdateCurrency(string currencyId, long valueToChange)
        {
            object raw_currencyId = currencyId;
            object raw_valueToChange = valueToChange;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("currencyId", raw_currencyId);
            serializedFields.Add("valueToChange", raw_valueToChange);
            return this.Request<long>("CurrencyUpdater", "UpdateCurrency", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersCurrencyUpdaterClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int64 : MicroserviceClientDataWrapper<long>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForCurrencyUpdaterClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute(50, Beamable.Common.Dependencies.RegistrationOrigin.EDITOR | Beamable.Common.Dependencies.RegistrationOrigin.RUNTIME)]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            System.Func<Beamable.Common.Dependencies.IDependencyProvider, CurrencyUpdaterClient> factory = p => new CurrencyUpdaterClient(p);
            builder.AddScoped<CurrencyUpdaterClient>(factory);
        }
        
        public static CurrencyUpdaterClient CurrencyUpdater(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<CurrencyUpdaterClient>();
        }
    }
}
